diff --git a/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js b/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js
index 9bc8158..df41711 100644
--- a/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js
+++ b/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js
@@ -246,7 +246,7 @@ const makeMessagesSocket = (config) => {
         }));
         return { nodes, shouldIncludeDeviceIdentity };
     };
-    const relayMessage = async (jid, message, { messageId: msgId, participant, additionalAttributes, useUserDevicesCache, cachedGroupMetadata, statusJidList }) => {
+    const relayMessage = async (jid, message, { messageId: msgId, participant, additionalAttributes, useUserDevicesCache, cachedGroupMetadata, statusJidList, patchStanza }) => {
         const meId = authState.creds.me.id;
         let shouldIncludeDeviceIdentity = false;
         const { user, server } = (0, WABinary_1.jidDecode)(jid);
@@ -387,7 +387,7 @@ const makeMessagesSocket = (config) => {
                     content: participants
                 });
             }
-            const stanza = {
+            let stanza = {
                 tag: 'message',
                 attrs: {
                     id: msgId,
@@ -438,6 +438,9 @@ const makeMessagesSocket = (config) => {
                 logger.debug({ jid }, 'adding business node');
             }
             logger.debug({ msgId }, `sending message to ${participants.length} devices`);
+            if (typeof patchStanza === 'function') {
+                stanza = patchStanza(stanza);
+            }
             await sendNode(stanza);
         });
         return msgId;
